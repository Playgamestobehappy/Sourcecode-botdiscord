import discord
from discord.ext import commands
from discord import app_commands
from keepAlive import keep_alive
import os
import yt_dlp
import asyncio
import datetime
import pytz
import random
import time

intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True

bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

start_time = time.time()

user_data = {}

def get_thai_time():
    tz = pytz.timezone("Asia/Bangkok")
    now = datetime.datetime.now(tz)
    return now.strftime("%H:%M:%S | %d-%m-%Y")

def get_uptime():
    seconds = int(time.time() - start_time)
    return str(datetime.timedelta(seconds=seconds))

@bot.event
async def on_ready():
    await tree.sync()
    print(f"Bot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: {bot.user} (ID: {bot.user.id})")
    await bot.change_presence(activity=discord.Game(name="‡πÉ‡∏ä‡πâ /play ‡∏´‡∏£‡∏∑‡∏≠ /fish ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°"))

# ----------- Voice & Music Commands -----------

@tree.command(name="join", description="‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
async def join_cmd(interaction: discord.Interaction):
    if not interaction.user.voice:
        await interaction.response.send_message("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó", ephemeral=True)
        return
    vc = interaction.guild.voice_client
    if vc and vc.is_connected():
        await interaction.response.send_message("‡∏ö‡∏≠‡∏ó‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        return
    channel = interaction.user.voice.channel
    await channel.connect()
    await interaction.response.send_message(f"‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {channel.name}")

@tree.command(name="leave", description="‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
async def leave_cmd(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if vc:
        await vc.disconnect()
        await interaction.response.send_message("‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await interaction.response.send_message("‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")

@tree.command(name="play", description="‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å YouTube")
@app_commands.describe(query="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô")
async def play_cmd(interaction: discord.Interaction, query: str):
    await interaction.response.defer()
    vc = interaction.guild.voice_client
    if not vc:
        if interaction.user.voice:
            vc = await interaction.user.voice.channel.connect()
        else:
            await interaction.followup.send("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏•‡∏á")
            return
    ytdl_opts = {
        "format": "bestaudio/best",
        "quiet": True,
        "noplaylist": True,
        "default_search": "ytsearch"
    }
    try:
        with yt_dlp.YoutubeDL(ytdl_opts) as ydl:
            info = ydl.extract_info(query, download=False)
            if "entries" in info:
                info = info["entries"][0]
            url = info["url"]
            title = info.get("title", "‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠")
    except Exception as e:
        await interaction.followup.send(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: {e}")
        return

    def after_play(error):
        if error:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á: {error}")

    if vc.is_playing():
        vc.stop()

    vc.play(discord.FFmpegPCMAudio(url), after=after_play)
    await interaction.followup.send(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á: **{title}**")

@tree.command(name="pause", description="‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß")
async def pause_cmd(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if vc and vc.is_playing():
        vc.pause()
        await interaction.response.send_message("‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

@tree.command(name="resume", description="‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠")
async def resume_cmd(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if vc and vc.is_paused():
        vc.resume()
        await interaction.response.send_message("‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏ß‡πâ")

@tree.command(name="skip", description="‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á")
async def skip_cmd(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if vc and vc.is_playing():
        vc.stop()
        await interaction.response.send_message("‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await interaction.response.send_message("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

@tree.command(name="stop", description="‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
async def stop_cmd(interaction: discord.Interaction):
    vc = interaction.guild.voice_client
    if vc:
        await vc.disconnect()
        await interaction.response.send_message("‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await interaction.response.send_message("‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")

# ----------- Mini Games -----------

@tree.command(name="fish", description="‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô")
async def fish_cmd(interaction: discord.Interaction):
    user = str(interaction.user.id)
    fishes = ["‡∏õ‡∏•‡∏≤‡∏ó‡∏≠‡∏á", "‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏≠", "‡∏õ‡∏•‡∏≤‡∏Å‡∏±‡∏î", "‡∏õ‡∏•‡∏≤‡∏ö‡∏π‡πà", "‡∏õ‡∏•‡∏≤‡∏ä‡πà‡∏≠‡∏ô", "‡∏õ‡∏•‡∏≤‡∏™‡∏ß‡∏≤‡∏¢", "‡∏õ‡∏•‡∏≤‡∏ô‡∏¥‡∏•"]
    fish = random.choice(fishes)
    money_earned = random.randint(10, 100)

    if user not in user_data:
        user_data[user] = {"fish_caught": [], "money": 0}
    user_data[user]["fish_caught"].append(fish)
    user_data[user]["money"] += money_earned

    await interaction.response.send_message(f"üé£ ‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏Å‡πÑ‡∏î‡πâ **{fish}** ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô `{money_earned}` ‡∏ö‡∏≤‡∏ó!")

@tree.command(name="myfish", description="‡∏î‡∏π‡∏õ‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏Å‡πÑ‡∏î‡πâ")
async def myfish_cmd(interaction: discord.Interaction):
    user = str(interaction.user.id)
    fish_list = user_data.get(user, {}).get("fish_caught", [])
    if not fish_list:
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏Å‡∏õ‡∏•‡∏≤‡πÄ‡∏•‡∏¢!")
        return
    fish_str = ", ".join(fish_list)
    money = user_data.get(user, {}).get("money", 0)
    await interaction.response.send_message(f"üêü ‡∏õ‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏Å‡πÑ‡∏î‡πâ: {fish_str}\nüí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: {money} ‡∏ö‡∏≤‡∏ó")

@tree.command(name="daily", description="‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô 100 ‡∏ö‡∏≤‡∏ó")
async def daily_cmd(interaction: discord.Interaction):
    user = str(interaction.user.id)
    now = int(time.time())
    if user in user_data and "last_daily" in user_data[user]:
        last = user_data[user]["last_daily"]
        if now - last < 86400:
            await interaction.response.send_message("‚è≥ ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡∏≠‡∏µ‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞")
            return
    user_data.setdefault(user, {"fish_caught": [], "money": 0})
    user_data[user]["money"] += 100
    user_data[user]["last_daily"] = now
    await interaction.response.send_message("üíµ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô 100 ‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")

# ----------- Utility Commands -----------

@tree.command(name="time", description="‡∏î‡∏π‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")
async def time_cmd(interaction: discord.Interaction):
    await interaction.response.send_message(f"üï∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ: `{get_thai_time()}`")

@tree.command(name="status", description="‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó")
async def status_cmd(interaction: discord.Interaction):
    uptime = get_uptime()
    ping = round(bot.latency * 1000)
    guild_count = len(bot.guilds)
    
    embed = discord.Embed(title="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏≠‡∏ó", color=0x00ff00)
    embed.add_field(name="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", value="‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", inline=True)
    embed.add_field(name="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", value=uptime, inline=True)
    embed.add_field(name="Ping", value=f"{ping} ms", inline=True)
    embed.add_field(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", value=str(guild_count), inline=True)
    embed.set_footer(text="namuiri_x üî•")

    await interaction.response.send_message(embed=embed)

@tree.command(name="credits", description="‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó")
async def credits_cmd(interaction: discord.Interaction):
    await interaction.response.send_message("üî• ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó: **namuiri_x üî•**")

keep_alive()

token = os.environ['TOKEN']
bot.run(token)
